import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as ss

plt.style.use('seaborn') # pretty matplotlib plots
plt.rcParams['figure.figsize'] = (6, 4)

def plot_normal(data_points, x_range, mu, sigma, **kwargs):
    x = x_range
    y = ss.norm.pdf(x, mu, sigma)
    plt.plot(x, 1000*y, **kwargs)
    plt.axvline(x=mu, ls='--', color='black')
    plt.hist(data, bins = 25)


CUSTOM = [46,71,67,50,54,50,42,62,58,42,54,54,67,58,67,54,42,46,54,54,58,58,62,67,46,42,71,46,58,33,54,71,38,54,62,71,33,50,62,50,54,62,42,40,50,62,58,54,42,46,54,50,42,62,71,62,38,42,38,67,46,50,46,50,58,54,50,50,54,42,50,50,75,54,58,54,71,58,54,54,62,46,46,33,46,46,58,58,54,33,58,62,62,42,67,42,54,38,42,50,54,54,46,54,54,58,46,58,42,75,58,54,58,50,50,75,58,62,62,46,67,50,42,58,38,75,58,46,54,54,58,62,38,50,54,50,50,42,58,42,46,62,50,46,46,46,67,54,50,54,50,54,42,54,42,38,42,46,62,46,54,50,58,50,62,58,71,67,62,58,58,54,54,62,71,58,54,38,50,67,46,33,54,54,42,58,58,38,54,62,62,54,62,54,58,50,62,42,33,54,62,58,58,46,62,42,71,46,67,25,71,71,67,50,58,71,54,50,67,62,50,54,46,50,62,46,75,50,58,75,46,42,46,67,71,62,62,46,54,67,58,67,54,71,71,50,50,62,67,50,]
data = [RBF, CUSTOM]

x_min = 30.0
x_max = 80.0
m_rbf = 51.296
m_cus = 54.084
s_rbf = 1.87575526957151
s_cus = 9.82072965332489

x = np.linspace(x_min, x_max, 5000)
plot_normal(RBF, x, m_rbf, s_rbf, color='red', label='RBF Kernel')
plot_normal(CUSTOM, x, m_cus, s_cus, color='blue', label='Custom Kernel')

plt.xlim(x_min, x_max)
plt.ylim(0, 230)

plt.xlabel('Accuacy (%)')
plt.ylabel('Frequency')
plt.legend()
plt.show()